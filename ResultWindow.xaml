<auiw:ChildWindow  xmlns:auiw="clr-namespace:Autodesk.UI.Windows;assembly=Autodesk.UI.Windows" x:Class="Cust_IFC_Exporter.ResultWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Cust_IFC_Exporter"
             mc:Ignorable="d" 
             ResizeMode="NoResize" SizeToContent="WidthAndHeight" Title="Validate Result" Background="#FFF1F1F1" Width="Auto" Height="Auto" Topmost="True">
    <Window.Resources>
        <Style x:Key="WindowTitleStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="24" />
            <!-- Set your desired font size -->
        </Style>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>
    <StackPanel x:Name="OuterMostPanel" Orientation="Vertical" Margin="15">
        <StackPanel x:Name="selectFileArea" Orientation="Horizontal" Margin="0,0,0,15">
            <ComboBox x:Name="fileSelected" Width="750" Height="25" HorizontalAlignment="Left" Background="White" Margin="10,0,70,0" SelectionChanged="fileSelectionChanged"/>
            <Button x:Name="optionButton" ToolTip="Set up filter options to filter through record" Width="150" Height="25" FontFamily="Arial" FontSize="16" Content="Filter Options" HorizontalAlignment="Right" Click="optionButton_Click"></Button>
        </StackPanel>
        <StackPanel x:Name="buttonFunctionArea" Orientation="Horizontal" Margin="0,0,0,20">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="170"></ColumnDefinition>
                    <ColumnDefinition Width="35"></ColumnDefinition>
                    <ColumnDefinition Width="170"></ColumnDefinition>
                    <ColumnDefinition Width="35"></ColumnDefinition>
                    <ColumnDefinition Width="170"></ColumnDefinition>
                    <ColumnDefinition Width="35"></ColumnDefinition>
                    <ColumnDefinition Width="170"></ColumnDefinition>
                    <ColumnDefinition Width="35"></ColumnDefinition>
                    <ColumnDefinition Width="170"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button x:Name="failedButton" FontFamily="Arial" FontSize="14" ToolTip="Show elements that are failed (Have any failed concept)" Content="Show Failed Elements" Background="{Binding ElementName=FailedColor, Path=Background}" Width="170" Height="25" Grid.Column="0" Click="failedButton_Click"></Button>
                <Button x:Name="warningButton" FontFamily="Arial" FontSize="14" ToolTip="Show elements with warnings (Have any warning concept)" Content="Show Warning Elements" Background="{Binding ElementName=WarningColor, Path=Background}" Width="170" Height="25" Grid.Column="2" Click="warningButton_Click"></Button>
                <Button x:Name="passButton" FontFamily="Arial" FontSize="14" ToolTip="Show elements that are passed (Does not have any failed concepts)" Content="Show Passed Elements" Background="{Binding ElementName=PassColor, Path=Background}" Width="170" Height="25" Grid.Column="4" Click="passButton_Click"></Button>
                <!--Background="{Binding ElementName=SelectedColor, Path=Background}" -->
                <Button x:Name="showElementsButton" FontFamily="Arial" FontSize="14" ToolTip="Show failed and passed elements in the same time (Limited to filtered elements and concepts only)" Content="Show Selected Elements" Width="170" Height="25" Grid.Column="6" Click="showElementsButton_Click"></Button>
                <Button x:Name="resetButton" FontFamily="Arial" FontSize="14" ToolTip="Clear and reset view and records" Content="Clear and Reset" Background="White" Width="170" Height="25" Grid.Column="8" Click="resetButton_Click"></Button>
            </Grid>
   
        </StackPanel>
                <!--
             <StackPanel x:Name="filterArea" Orientation="Horizontal">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="210"></ColumnDefinition>
                    <ColumnDefinition Width="110"></ColumnDefinition>
                    <ColumnDefinition Width="140"></ColumnDefinition>
                    <ColumnDefinition Width="140"></ColumnDefinition>
                    <ColumnDefinition Width="65"></ColumnDefinition>
                    <ColumnDefinition Width="150"></ColumnDefinition>
                </Grid.ColumnDefinitions>
             <ComboBox x:Name="IfcIdFilter" Grid.Column="0" DropDownClosed="IfcFilter_DropDownClosed" ItemsSource="{Binding IfcInstanceFilters}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Checked="CheckBox_Checked_1" Unchecked="CheckBox_Unchecked_1"></CheckBox>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox x:Name="IfcTypeFilter" Grid.Column="1" DropDownClosed="IfcFilter_DropDownClosed" ItemsSource="{Binding IfcTypeFilters}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Checked="CheckBox_Checked_2" Unchecked="CheckBox_Unchecked_2"></CheckBox>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox x:Name="ConceptRootFilter" Grid.Column="2" DropDownClosed="IfcFilter_DropDownClosed" ItemsSource="{Binding ConceptRootFilters}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Checked="CheckBox_Checked_3" Unchecked="CheckBox_Unchecked_3"></CheckBox>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox x:Name="ConceptNameFilter" Grid.Column="3" DropDownClosed="IfcFilter_DropDownClosed" ItemsSource="{Binding ConceptNameFilters}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Checked="CheckBox_Checked_4" Unchecked="CheckBox_Unchecked_4"></CheckBox>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox x:Name="ResultFilter" Grid.Column="4" DropDownClosed="IfcFilter_DropDownClosed" ItemsSource="{Binding ResultFilters}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Checked="CheckBox_Checked_5" Unchecked="CheckBox_Unchecked_5"></CheckBox>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
        </StackPanel>
                --> 
        <StackPanel x:Name="mainTableArea" Orientation="Horizontal" Margin="0,0,0,25">
            <Grid Margin="0,0,10,0">
                <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" Grid.Column="1">
                    <ListView x:Name="DataTable" Height="550" Width="870">
<!--                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="IFC Instance" Width="205"/>
                                <GridViewColumn Header="IFC Type" Width="110"/>
                                <GridViewColumn Header="Concept Root Name" Width="140"/>
                                <GridViewColumn Header="Concept Name" Width="140"/>
                                <GridViewColumn Header="Result" Width="65"/>
                                <GridViewColumn Header="Failed Reason" Width="150"/>
                            </GridView>
                        </ListView.View>-->
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Expander Name="expander" IsExpanded="False" MouseDoubleClick="EleMouseDoubleClick">
                                    <Expander.Header>
                                        <TextBlock Text="{Binding Name}" />
                                        <!-- Bind to the "Name" property of OuterItem -->
                                    </Expander.Header>
                                    <Expander.Content>
                                        <ListView ItemsSource="{Binding Results}">
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="IFC Instance" Width="205" DisplayMemberBinding="{Binding Id}" />
                                                    <GridViewColumn Header="IFC Type" Width="110" DisplayMemberBinding="{Binding IfcType}" />
                                                    <GridViewColumn Header="Concept Root Name" Width="140" DisplayMemberBinding="{Binding ConceptRootName}" />
                                                    <GridViewColumn Header="Concept Name" Width="140" DisplayMemberBinding="{Binding ConceptName}" />
                                                    <GridViewColumn Header="Result" Width="65" DisplayMemberBinding="{Binding Result}" />
                                                    <GridViewColumn Header="Failed Reason" Width="150" DisplayMemberBinding="{Binding Parameters}" />
                                                </GridView>
                                            </ListView.View>
                                            <ListView.ItemContainerStyle>
                                                <Style TargetType="ListViewItem">
                                                    <Setter Property="Visibility" Value="{Binding Hide, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                                    <Setter Property="Background" Value="{Binding Background, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    <EventSetter Event="MouseDoubleClick" Handler="EleMouseDoubleClick"></EventSetter>
                                                </Style>
                                            </ListView.ItemContainerStyle>
                                        </ListView>
                                    </Expander.Content>
                                </Expander>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Visibility" Value="{Binding Hide, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter Property="Background" Value="{Binding Background, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <!--                       <ListView.View>
                          <GridView>
                                <GridViewColumn Header="IFC Instance" Width="205" DisplayMemberBinding="{Binding Id}" />
                                <GridViewColumn Header="IFC Type" Width="110" DisplayMemberBinding="{Binding IfcType}" />
                                <GridViewColumn Header="Concept Root Name" Width="140" DisplayMemberBinding="{Binding ConceptRootName}" />
                                <GridViewColumn Header="Concept Name" Width="140" DisplayMemberBinding="{Binding ConceptName}" />
                                <GridViewColumn Header="Result" Width="65" DisplayMemberBinding="{Binding Result}" />
                                <GridViewColumn Header="Failed Reason" Width="150" DisplayMemberBinding="{Binding Parameters}" />
                            </GridView>
                        </ListView.View>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Visibility" Value="{Binding Hide, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter Property="Background" Value="{Binding Background, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Style>
                        </ListView.ItemContainerStyle>-->
                    </ListView>
                </ScrollViewer>
            </Grid>
            <StackPanel x:Name="Legend" Orientation="Vertical">
                <Label Content="Legend:" FontFamily="Arial" FontSize="16"></Label>
                <Button x:Name="FailedColor" Background="#FFF19191" Width="80" Height="30" Content="Fail" FontSize="18" BorderBrush="Black" Margin="0,0,0,10" Click="ColorSelect_Click"></Button>
                <Button x:Name="WarningColor" Background="#FFF7CC7F" Width="80" Height="30" Content="Warning" FontSize="18" BorderBrush="Black" Margin="0,0,0,10" Click="ColorSelect_Click"></Button>
                <Button x:Name="PassColor" Background="#FF8EFD9F" Width="80" Height="30" Content="Pass" FontSize="18" BorderBrush="Black" Margin="0,0,0,10" Click="ColorSelect_Click"></Button>
                <Button x:Name="NotApplyColor" Background="#FF77ABFF" Width="80" Height="30" Content="NotApply" FontSize="18" BorderBrush="Black" Margin="0,0,0,10" Click="ColorSelect_Click"></Button>
                <Button x:Name="SelectColor" Background="MediumPurple" Width="80" Height="30" Content="Selected" FontSize="18" BorderBrush="Black" Margin="0,0,0,10" Click="ColorSelect_Click"/>
                <Button x:Name="resetLegendButton" ToolTip="Rset the legend to the original color" FontFamily="Arial" FontSize="18" BorderBrush="Black" Content="Reset" Width="80" Height="30" Click="resetLegendButton_Click" Background="#00000000"></Button>
            </StackPanel>
        </StackPanel>
        <StackPanel x:Name="finalOpArea" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button x:Name="reValidateButton" FontFamily="Arial" FontSize="16" Content="Re-Validate" Width="100" Height="25" Margin="0,0,30,0" Click="reValidateButton_Click"></Button>
            <Button x:Name="cancelButton" FontFamily="Arial" FontSize="16" Content="Cancel" Width="100" Height="25" Margin="0,0,15,0" Click="cancelButton_Click"></Button>
        </StackPanel>
    </StackPanel>


</auiw:ChildWindow>
